# Process this file with autoconf to produce a configure script.

AC_INIT(DESCRIPTION)
AC_PROG_CC
AC_PROG_F77

AC_ARG_WITH(blacs,
[   --with-blacs=${HOME}/BLACS          Location of BLACS library.],
[   if test "${withval}" = no; then
        supply_blacs=no
    else
        supply_blacs=yes
        BLACS_ROOT=${withval}
    fi  ]
)

AC_SEARCH_LIBS(openpty, [util])


# Bdef.h -- Status ??

AC_ARG_WITH(mpi,
[   --with-mpi=/usr/local          Location of MPI library.],
[   if test "${withval}" = no; then
        supply_mpi=no
    else
        supply_mpi=yes
        MPI_ROOT=${withval}
    fi  ]
)


AC_CHECK_HEADER(mpi.h, [ MPI_INCLUDE="" ],
[   if test "${supply_mpi}" = yes; then
        echo "Looking for mpi.h in ${MPI_ROOT}/include"
        if test -f "${MPI_ROOT}/include/mpi.h"; then
            echo "Found in ${MPI_ROOT}/include"
            MPI_INCLUDE="-I${MPI_ROOT}/include"
		elif test -f "${MPI_ROOT}/mpi.h"; then
			echo "Found in ${MPI_ROOT}"
			MPI_INCLUDE="-I${MPI_ROOT}"
        else
            echo "Cannot find mpi header file"
            echo "Please check if --with-mpi=${MPI_ROOT} is right"
            exit 1
        fi
    else
        echo "Try to find mpi.h ..."
        if test -f "/home/yoginath/tools/lam-7.0.2/include/mpi.h"; then
            echo "Found in /home/yoginath/tools/lam-7.0.2/include"
            MPI_INCLUDE="-I/home/yoginath/tools/lam-7.0.2/include"
		elif test -f "/usr/include/mpi.h"; then
			echo "Found in /usr/include"
			MPI_INCLUDE="/usr/include"
		elif test -f "/usr/local/include/mpi.h"; then
			echo "Found in /usr/local/include"
			MPI_INCLUDE="-I/usr/local/include"
		elif test -f "${HOME}/include/mpi.h"; then
			echo "Found in ${HOME}/include"
			MPI_INCLUDE="-I${HOME}/include"
		elif test -f "/usr/include/lam/mpi.h"; then
			echo "Found in /usr/include/lam"
			MPI_INCLUDE="-I/usr/include/lam"
		else
			MPI_INCLUDE=`locate "mpi.h" | grep "/mpi.h" | grep "[[Ll]][[Aa]][[Mm]]" | head -n 1`
			echo "${MPI_INCLUDE}"
			if test -f "${MPI_INCLUDE}"; then
				MPI_INCLUDE=`echo ${MPI_INCLUDE} | sed "s/\(.*\/\)[[^\/]]*/\1/"`
				echo "Found in ${MPI_INCLUDE}"
				MPI_INCLUDE="-I${MPI_INCLUDE}"
	        else
	            echo "Cannot find mpi header file."
	            echo "Please use --with-mpi=/path/to/mpi"
	            exit 1
			fi
        fi
    fi
]
)


# CC=${F77}
AC_CHECK_LIB(pthread, pthread_atfork, [], [
	AC_CHECK_LIB(pthreads, pthread_atfork , [], [
		CFLAGS="${CFLAGS} -pthread"
		AC_CHECK_FUNC(pthread_create, [], [
			echo "Error!  libpthread is required."
			exit -1
		])
	])
])
AC_CHECK_FUNC(MPI_Comm_spawn, [], [
	AC_CHECK_LIB(mpi, MPI_Comm_spawn, [], [
		AC_CHECK_LIB(lam, lam_rtrstore, [], [
		 	echo "Error!  liblam is required (mpich won't work)."
			exit -1
		])
		AC_CHECK_LIB(mpi, MPI_Comm_spawn_multiple, [], [
			echo "Error!  libmpi is required."
			exit -1
		])
		AC_CHECK_LIB(lamf77mpi, mpi_comm_create__, [], [
			echo "Error!  liblamf77mpi is required (part of lam installation)."
			exit -1
		])
	])
])
CC_SAVE=${CC}
CC=${F77}
AC_CHECK_LIB(atlas, ATL_ztrsm)
AC_CHECK_LIB(f77blas, ztrsm_, [], [
	AC_CHECK_LIB(blas, ztrsm_, [], [
		AC_CHECK_LIB(scs, ztrsm_, [], [
			echo "Error! No blas library found."
			exit -1
		])
	])
])
AC_CHECK_LIB(blacs, Cblacs_gridexit, [], [
	AC_CHECK_LIB(blacs-lam, Cblacs_gridexit, , , [-lblacsCinit-lam])
])
AC_CHECK_LIB(blacsCinit, Cblacs_pinfo, [ true ] , [
	AC_CHECK_LIB(blacsCinit-lam, Cblacs_pinfo)
])
AC_CHECK_LIB(blacsF77init, blacs_pinfo__, [], [ 
	AC_CHECK_LIB(blacsF77init-lam, blacs_pinfo__)
])
AC_CHECK_LIB(lapack, clacrm_)
AC_CHECK_LIB(scalapack, pdgesv_, [], [
	AC_CHECK_LIB(scalapack-lam, pdgesv_, [], [
		echo "Error!  libscalapack is required."
		exit -1
	])
])
CC=${CC_SAVE}

dnl AX_CFLAGS_OPTIONS(var-name, option)
dnl add option to var-name if $CC support it.
AC_DEFUN(AX_CFLAGS_OPTION, [
AC_MSG_CHECKING([whether ${CC} $2 is understood])
AC_LANG_SAVE
AC_LANG_C
SAVE_CFLAGS=$CFLAGS
CFLAGS=$2
AC_TRY_COMPILE(,[;],AC_MSG_RESULT([yes]); $1="${$1} $2",AC_MSG_RESULT([no]))
CFLAGS=$SAVE_CFLAGS
AC_LANG_RESTORE
])

AX_CFLAGS_OPTION(OP_CFLAGS,[-Wall])
AX_CFLAGS_OPTION(OP_CFLAGS,[-ansi])
AX_CFLAGS_OPTION(OP_CFLAGS,[-pedantic])
CFLAGS="${CFLAGS} ${OP_CFLAGS}"
PKG_LIBS="${LIBS}"
PKG_CPPFLAGS="${MPI_INCLUDE} ${BLACS_INCLUDE} ${LDFLAGS} ${CFLAGS}"
PKG_F77FLAGS="-g"
#PKG_CPPFLAGS="${BLACS_INCLUDE}"

echo $PKG_CPPFLAGS
echo $PKG_LIBS
echo $DEFS

AC_SUBST(PKG_LIBS)
AC_SUBST(PKG_CPPFLAGS)
AC_SUBST(DEFS)

AC_OUTPUT(src/Makevars R/zzz.R)
